<%- include('./partials/header') %>
<body>
    <div class="container">
        <div class="dashboard-header">
            <h1><i class="fas fa-tachometer-alt"></i> Admin Dashboard</h1>
            <div class="filter-section">
                <button id="filterToggleBtn" class="filter-toggle-btn">
                    <i class="fas fa-filter"></i> Filter
                </button>
                <div id="filterControlsContainer" class="filter-controls" style="display: none;">
                    <div class="search-container">
                        <input type="text" id="searchInput" placeholder="Search tickets..." onkeyup="filterTickets()">
                        <i class="fas fa-search search-icon"></i>
                    </div>
                    <select id="statusFilter" onchange="filterTickets()">
                        <option value="all">All Statuses</option>
                        <option value="Åpen">Open</option>
                        <option value="Under arbeid">In Progress</option>
                        <option value="Løst">Finished</option>
                        <option value="Closed">Closed</option>
                    </select>
                    <select id="priorityFilter" onchange="filterTickets()">
                        <option value="all">All Priorities</option>
                        <option value="Low">Low</option>
                        <option value="Medium">Medium</option>
                        <option value="High">High</option>
                    </select>
                    <select id="categoryFilter" onchange="filterTickets()">
                        <option value="all">All Categories</option>
                        <option value="Bug">Bug</option>
                        <option value="Feature Request">Feature Request</option>
                        <option value="Support">Support</option>
                    </select>
                </div>
            </div>
        </div>
        
        <!-- Add this new statistics section -->
        <div class="stats-section">
            <h2><i class="fas fa-chart-pie"></i> Ticket Statistics</h2>
            <div class="stats-container">
                <div class="stat-card open">
                    <div class="stat-icon"><i class="fas fa-envelope-open"></i></div>
                    <div class="stat-info">
                        <span class="stat-count" id="openCount">0</span>
                        <span class="stat-label">Open</span>
                    </div>
                </div>
                <div class="stat-card in-progress">
                    <div class="stat-icon"><i class="fas fa-spinner"></i></div>
                    <div class="stat-info">
                        <span class="stat-count" id="inProgressCount">0</span>
                        <span class="stat-label">In Progress</span>
                    </div>
                </div>
                <div class="stat-card resolved">
                    <div class="stat-icon"><i class="fas fa-check-circle"></i></div>
                    <div class="stat-info">
                        <span class="stat-count" id="resolvedCount">0</span>
                        <span class="stat-label">Resolved</span>
                    </div>
                </div>
                <div class="stat-card closed">
                    <div class="stat-icon"><i class="fas fa-archive"></i></div>
                    <div class="stat-info">
                        <span class="stat-count" id="closedCount">0</span>
                        <span class="stat-label">Closed</span>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- New Priority Statistics Section -->
        <div class="stats-section">
            <h2><i class="fas fa-flag"></i> Priority Statistics</h2>
            <div class="stats-container">
                <div class="stat-card priority-low">
                    <div class="stat-icon"><i class="fas fa-arrow-down"></i></div>
                    <div class="stat-info">
                        <span class="stat-count" id="lowPriorityCount">0</span>
                        <span class="stat-label">Low</span>
                    </div>
                </div>
                <div class="stat-card priority-medium">
                    <div class="stat-icon"><i class="fas fa-minus"></i></div>
                    <div class="stat-info">
                        <span class="stat-count" id="mediumPriorityCount">0</span>
                        <span class="stat-label">Medium</span>
                    </div>
                </div>
                <div class="stat-card priority-high">
                    <div class="stat-icon"><i class="fas fa-arrow-up"></i></div>
                    <div class="stat-info">
                        <span class="stat-count" id="highPriorityCount">0</span>
                        <span class="stat-label">High</span>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="ticket-section">
            <h2>All Tickets</h2>
            <div class="table-responsive">
                <table id="ticketsTable">
                    <thead>
                        <tr>
                            <th>Title</th>
                            <th>Description</th>
                            <th>Category</th>
                            <th>Priority</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% tickets.forEach(ticket => { %>
                            <tr data-status="<%= ticket.status %>" data-priority="<%= ticket.priority %>" data-category="<%= ticket.category %>" 
                                data-title="<%= ticket.title.toLowerCase() %>" 
                                data-description="<%= ticket.description.toLowerCase() %>">
                                <td><%= ticket.title %></td>
                                <td><%= ticket.description.length > 50 ? ticket.description.substring(0, 50) + '...' : ticket.description %></td>
                                <td><%= ticket.category %></td>
                                <td>
                                    <span class="priority-badge <%= ticket.priority.toLowerCase() %>">
                                        <%= ticket.priority %>
                                    </span>
                                </td>
                                <td>
                                    <span class="status-badge <%= ticket.status.toLowerCase().replace(/\s+/g, '-') %>">
                                        <%= ticket.status %>
                                    </span>
                                </td>
                                <td>
                                    <button onclick="openEditModal('<%= ticket._id %>')" class="btn-edit"><i class="fas fa-edit"></i></button>
                                    <a href="/tickets/view/<%= ticket._id %>" class="btn-view"><i class="fas fa-eye"></i></a>
                                    <% if(ticket.status === 'Løst' || ticket.status === 'Closed') { %>
                                        <button onclick="confirmDelete('<%= ticket._id %>')" class="btn-delete"><i class="fas fa-trash"></i></button>
                                    <% } %>
                                </td>
                            </tr>
                        <% }) %>
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Edit Modal -->
    <div id="editModal" class="modal">
        <div class="modal-content">
            <h3 class="modal-title">Edit Ticket</h3>
            <form id="editForm" action="/tickets/edit" method="POST" enctype="multipart/form-data">
                <input type="hidden" name="ticketId" id="editTicketId">
                <div>
                    <label for="editTitle">Title</label>
                    <input type="text" name="title" id="editTitle" required>
                </div>
                <div>
                    <label for="editDescription">Description</label>
                    <textarea name="description" id="editDescription" rows="4" required></textarea>
                </div>
                <div>
                    <label for="editPriority">Priority</label>
                    <select name="priority" id="editPriority" required>
                        <option value="Low">Low</option>
                        <option value="Medium">Medium</option>
                        <option value="High">High</option>
                    </select>
                </div>
                <div>
                    <label for="editStatus">Status</label>
                    <select name="status" id="editStatus" required>
                        <option value="Åpen">Open</option>
                        <option value="Under arbeid">In Progress</option>
                        <option value="Løst">Finished</option>
                        <option value="Closed">Closed</option>
                    </select>
                </div>
                <div>
                    <label for="adminComment">Admin Comment (Optional)</label>
                    <textarea name="adminComment" id="adminComment" rows="2" placeholder="Add a comment with your changes"></textarea>
                </div>
                <div class="modal-buttons">
                    <button type="button" onclick="closeEditModal()" class="btn-cancel">Cancel</button>
                    <button type="submit" class="btn-save">Save Changes</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div id="deleteModal" class="modal">
        <div class="modal-content delete-modal">
            <h3 class="modal-title">Confirm Deletion</h3>
            <p>Are you sure you want to delete this ticket? This action cannot be undone.</p>
            <div class="modal-buttons">
                <button type="button" onclick="closeDeleteModal()" class="btn-cancel">Cancel</button>
                <button type="button" id="confirmDeleteBtn" class="btn-delete">Delete</button>
            </div>
        </div>
    </div>

    <script>
        // Store ticket data for easier access
        const ticketData = {};
        <% tickets.forEach(ticket => { %>
            ticketData['<%= ticket._id %>'] = {
                title: '<%= ticket.title %>',
                description: '<%= ticket.description %>',
                priority: '<%= ticket.priority %>',
                status: '<%= ticket.status %>'
            };
        <% }) %>
        
        // Filter toggle functionality
        document.getElementById('filterToggleBtn').addEventListener('click', function() {
            const filterContainer = document.getElementById('filterControlsContainer');
            if (filterContainer.style.display === 'none') {
                filterContainer.style.display = 'flex';
                this.classList.add('active');
            } else {
                filterContainer.style.display = 'none';
                this.classList.remove('active');
            }
        });
        
        function openEditModal(ticketId) {
            const ticket = ticketData[ticketId];
            document.getElementById('editModal').style.display = 'block';
            document.body.style.overflow = 'hidden'; // Prevent scrolling when modal is open
            
            // Populate form fields
            document.getElementById('editTicketId').value = ticketId;
            document.getElementById('editTitle').value = ticket.title;
            document.getElementById('editDescription').value = ticket.description;
            document.getElementById('editPriority').value = ticket.priority;
            document.getElementById('editStatus').value = ticket.status;
        }

        function closeEditModal() {
            document.getElementById('editModal').style.display = 'none';
            document.body.style.overflow = 'auto'; // Restore scrolling
        }

        // Close modal when clicking outside
        window.addEventListener('click', function(event) {
            const modal = document.getElementById('editModal');
            if (event.target === modal) {
                closeEditModal();
            }
        });

        document.getElementById('editForm').addEventListener('submit', async function (event) {
            event.preventDefault();
            const formData = new FormData(this);
            
            try {
                const response = await fetch('/tickets/edit', {
                    method: 'POST',
                    body: formData
                });
                
                if (response.ok) {
                    location.reload(); // Reload the page to see the changes
                } else {
                    const error = await response.text();
                    alert('Error updating ticket: ' + error);
                }
            } catch (error) {
                alert('Error updating ticket: ' + error.message);
            }
        });
        
        // Delete functionality
        let ticketToDelete = null;
        
        function confirmDelete(ticketId) {
            ticketToDelete = ticketId;
            document.getElementById('deleteModal').style.display = 'block';
            document.body.style.overflow = 'hidden';
        }
        
        function closeDeleteModal() {
            document.getElementById('deleteModal').style.display = 'none';
            document.body.style.overflow = 'auto';
            ticketToDelete = null;
        }
        
        // Close delete modal when clicking outside
        window.addEventListener('click', function(event) {
            const modal = document.getElementById('deleteModal');
            if (event.target === modal) {
                closeDeleteModal();
            }
        });
        
        document.getElementById('confirmDeleteBtn').addEventListener('click', async function() {
            if (!ticketToDelete) return;
            
            try {
                const response = await fetch(`/tickets/delete/${ticketToDelete}`, {
                    method: 'DELETE'
                });
                
                if (response.ok) {
                    // Remove the row from the table
                    const row = document.querySelector(`tr[data-ticket-id="${ticketToDelete}"]`);
                    if (row) row.remove();
                    closeDeleteModal();
                    
                    // Update stats after deletion
                    updateStatistics();
                    
                    // Optional: show success message
                    alert('Ticket deleted successfully');
                } else {
                    const error = await response.text();
                    alert('Error deleting ticket: ' + error);
                }
            } catch (error) {
                alert('Error deleting ticket: ' + error.message);
            }
        });
        
        // Add this function to update statistics
        function updateStatistics() {
            let openCount = 0;
            let inProgressCount = 0;
            let resolvedCount = 0;
            let closedCount = 0;
            
            // Priority counters
            let lowPriorityCount = 0;
            let mediumPriorityCount = 0;
            let highPriorityCount = 0;
            
            // Count tickets by status and priority
            document.querySelectorAll('#ticketsTable tbody tr').forEach(row => {
                // Only count visible rows (not filtered out)
                if (row.style.display !== 'none') {
                    const status = row.getAttribute('data-status');
                    const priority = row.getAttribute('data-priority');
                    
                    // Count by status
                    if (status === 'Åpen') openCount++;
                    else if (status === 'Under arbeid') inProgressCount++;
                    else if (status === 'Løst') resolvedCount++;
                    else if (status === 'Closed') closedCount++;
                    
                    // Count by priority
                    if (priority === 'Low') lowPriorityCount++;
                    else if (priority === 'Medium') mediumPriorityCount++;
                    else if (priority === 'High') highPriorityCount++;
                }
            });
            
            // Update the status counts
            document.getElementById('openCount').textContent = openCount;
            document.getElementById('inProgressCount').textContent = inProgressCount;
            document.getElementById('resolvedCount').textContent = resolvedCount;
            document.getElementById('closedCount').textContent = closedCount;
            
            // Update the priority counts
            document.getElementById('lowPriorityCount').textContent = lowPriorityCount;
            document.getElementById('mediumPriorityCount').textContent = mediumPriorityCount;
            document.getElementById('highPriorityCount').textContent = highPriorityCount;
        }
        
        // Call statistics update when page loads and after filtering
        document.addEventListener('DOMContentLoaded', updateStatistics);
        
        // Update the filterTickets function
        function filterTickets() {
            const statusFilter = document.getElementById('statusFilter').value;
            const priorityFilter = document.getElementById('priorityFilter').value;
            const categoryFilter = document.getElementById('categoryFilter').value;
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            
            const rows = document.querySelectorAll('#ticketsTable tbody tr');
            
            rows.forEach(row => {
                const status = row.getAttribute('data-status');
                const priority = row.getAttribute('data-priority');
                const category = row.getAttribute('data-category');
                const title = row.getAttribute('data-title');
                const description = row.getAttribute('data-description');
                
                const statusMatch = statusFilter === 'all' || status === statusFilter;
                const priorityMatch = priorityFilter === 'all' || priority === priorityFilter;
                const categoryMatch = categoryFilter === 'all' || category === categoryFilter;
                
                // New search functionality
                const searchMatch = searchTerm === '' || 
                    title.includes(searchTerm) || 
                    description.includes(searchTerm);
                
                if (statusMatch && priorityMatch && categoryMatch && searchMatch) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
            
            // Update statistics after filtering
            updateStatistics();
        }
    </script>
    
    <style>
        .dashboard-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
        }
        
        .filter-controls {
            display: flex;
            gap: 10px;
            align-items: center;
            flex-wrap: wrap;
        }
        
        .filter-controls select {
            padding: 8px;
            border-radius: 5px;
            background-color: #2c2c2c;
            border: 1px solid #444;
            color: #fff;
            min-width: 130px;
        }
        
        .ticket-section {
            background-color: #1e1e1e;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }
        
        .table-responsive {
            overflow-x: auto;
        }
        
        .priority-badge, .status-badge {
            display: inline-block;
            padding: 4px 8px;
            border-radius: 4px;
            font-weight: bold;
            font-size: 0.9rem;
        }
        
        .priority-badge.low {
            background-color: #2196F3;
            color: white;
        }
        
        .priority-badge.medium {
            background-color: #FF9800;
            color: white;
        }
        
        .priority-badge.high {
            background-color: #F44336;
            color: white;
        }
        
        .status-badge.åpen {
            background-color: #2196F3;
            color: white;
        }
        
        .status-badge.under-arbeid {
            background-color: #FF9800;
            color: white;
        }
        
        .status-badge.løst {
            background-color: #4CAF50;
            color: white;
        }
        
        .status-badge.closed {
            background-color: #9E9E9E;
            color: white;
        }
        
        .btn-save {
            background-color: #4CAF50;
        }
        
        .btn-cancel {
            background-color: #757575;
        }
        
        /* Add styles for the statistics section */
        .stats-section {
            background-color: #1e1e1e;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            margin-bottom: 30px;
        }
        
        .stats-container {
            display: flex;
            justify-content: space-between;
            flex-wrap: wrap;
            gap: 20px;
            margin-top: 20px;
        }
        
        .stat-card {
            flex: 1;
            min-width: 200px;
            background-color: #252525;
            border-radius: 8px;
            padding: 20px;
            display: flex;
            align-items: center;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            transition: transform 0.2s;
        }
        
        .stat-card:hover {
            transform: translateY(-5px);
        }
        
        .stat-card.open {
            border-left: 5px solid #2196F3;
        }
        
        .stat-card.in-progress {
            border-left: 5px solid #FF9800;
        }
        
        .stat-card.resolved {
            border-left: 5px solid #4CAF50;
        }
        
        .stat-card.closed {
            border-left: 5px solid #9E9E9E;
        }
        
        .stat-icon {
            font-size: 2rem;
            margin-right: 15px;
            color: #888;
        }
        
        .stat-info {
            display: flex;
            flex-direction: column;
        }
        
        .stat-count {
            font-size: 1.8rem;
            font-weight: bold;
            margin-bottom: 5px;
            color: #fff;
        }
        
        .stat-label {
            color: #aaa;
            font-size: 0.9rem;
        }
        
        /* Add styles for delete button */
        .btn-delete {
            background-color: #F44336;
            color: white;
            border: none;
            border-radius: 4px;
            padding: 5px 10px;
            cursor: pointer;
            font-size: 0.9rem;
            margin-left: 5px;
            transition: background-color 0.3s ease;
        }
        
        .btn-delete:hover {
            background-color: #D32F2F;
        }
        
        .delete-modal {
            max-width: 400px;
            text-align: center;
        }
        
        .delete-modal p {
            margin: 20px 0;
            color: #ddd;
        }
        
        .search-container {
            position: relative;
            display: flex;
            align-items: center;
        }
        
        #searchInput {
            padding: 8px 12px 8px 35px;
            border-radius: 5px;
            background-color: #2c2c2c;
            border: 1px solid #444;
            color: #fff;
            width: 220px;
            transition: width 0.3s ease;
        }
        
        #searchInput:focus {
            outline: none;
            border-color: #4CAF50;
            width: 250px;
        }
        
        .search-icon {
            position: absolute;
            left: 10px;
            color: #888;
        }
        
        /* Priority stat card styles */
        .stat-card.priority-low {
            border-left: 5px solid #2196F3;
        }
        
        .stat-card.priority-medium {
            border-left: 5px solid #FF9800;
        }
        
        .stat-card.priority-high {
            border-left: 5px solid #F44336;
        }
        
        .filter-section {
            display: flex;
            flex-direction: column;
            align-items: flex-end;
        }
        
        .filter-toggle-btn {
            background-color: #2c2c2c;
            color: white;
            border: 1px solid #444;
            border-radius: 5px;
            padding: 8px 15px;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 8px;
            margin-bottom: 10px;
            transition: all 0.3s ease;
        }
        
        .filter-toggle-btn:hover, .filter-toggle-btn.active {
            background-color: #4CAF50;
            border-color: #4CAF50;
        }
        
        .filter-toggle-btn i {
            font-size: 14px;
        }
    </style>
</body>
</html>