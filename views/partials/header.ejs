<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="Fiks ferdig - Your daily to-do list app">
    <title><%= title %></title>
    <!-- <link rel="stylesheet" href="/main.css"> -->
    <link rel="stylesheet" href="/css/main.css">
    <!-- Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <style>
        /* Add some basic styling */
        .message-receiver {
            position: relative;
            display: inline-block;
            margin-left: 20px;
        }
        .message-icon {
            cursor: pointer;
            font-size: 1.2rem;
        }
        .notification-badge {
            position: absolute;
            top: -5px;
            right: -5px;
            background-color: red;
            color: white;
            border-radius: 50%;
            padding: 0 5px;
            font-size: 0.8rem;
        }
        .messages-dropdown {
            display: none;
            position: absolute;
            right: 0;
            background-color: #2c2c2c;
            min-width: 300px;
            box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
            z-index: 1;
            border-radius: 5px;
            padding: 10px;
            color: #eee;
        }
        .message-item {
            padding: 10px;
            border-bottom: 1px solid #444;
            margin-bottom: 8px;
        }
        .message-item:last-child {
            border-bottom: none;
            margin-bottom: 0;
        }
        .message-content {
            margin-bottom: 8px;
        }
        .message-time {
            font-size: 0.8rem;
            color: #aaa;
            display: block;
            margin-bottom: 8px;
        }
        .message-actions {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .btn-view-message {
            background-color: #4CAF50;
            color: white;
            padding: 5px 10px;
            text-decoration: none;
            border-radius: 3px;
            font-size: 0.8rem;
            display: inline-block;
        }
        .dropdown-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
            border-bottom: 1px solid #444;
            padding-bottom: 8px;
        }
        .mark-all-read {
            font-size: 0.8rem;
            color: #4da6ff;
            cursor: pointer;
        }
        .mark-all-read:hover {
            text-decoration: underline;
        }
        .empty-messages {
            text-align: center;
            padding: 15px 10px;
            color: #888;
        }
        /* Support role badges in nav */
        .user-role-badge {
            background-color: #555;
            color: white;
            padding: 2px 8px;
            border-radius: 10px;
            font-size: 0.75rem;
            margin-left: 5px;
        }
        .admin-role {
            background-color: #e91e63;
        }
        .support-1st-role {
            background-color: #4CAF50;
        }
        .support-2nd-role {
            background-color: #ff9800;
        }
    </style>
</head>
<body>
    
    <header>
        <nav>
            <ul>
                <li><a href="/">Home</a></li>
                <% if (isAuthenticated) { %>
                    <% if (isAdmin) { %>
                        <li>
                            <a href="/dashboard">Admin Dashboard</a>
                            <span class="user-role-badge admin-role">Admin</span>
                        </li>
                    <% } else if (isSupportStaff) { %>
                        <li>
                            <a href="/tickets/support-dashboard">Support Dashboard</a>
                            <span class="user-role-badge <%= userRole === '1st Line' ? 'support-1st-role' : 'support-2nd-role' %>">
                                <%= userRole %>
                            </span>
                        </li>
                    <% } %>
                    <li><a href="/profile">Profile</a></li>
                    <li><a href="/help"><i class="fas fa-book"></i> User Manual</a></li>
                    <li><a href="/faq"><i class="fas fa-question-circle"></i> FAQ</a></li>
                    <li>
                        <div class="message-receiver">
                            <div class="message-icon" onclick="toggleMessages()">
                                <i class="fas fa-bell"></i>
                                <span class="notification-badge" id="notification-count">0</span>
                            </div>
                            <div class="messages-dropdown" id="messages-dropdown">
                                <div class="dropdown-header">
                                    <h4>Notifications</h4>
                                    <span class="mark-all-read" onclick="markAllMessagesAsRead()">Mark all as read</span>
                                </div>
                                <div id="messages-container">
                                    <div class="empty-messages">No new notifications</div>
                                </div>
                            </div>
                        </div>
                    </li>
                    <li>
                        <form action="/logout" class="logout-form" method="get">
                            <button type="submit" class="btn-logout">
                                <i class="fas fa-sign-out-alt"></i> Logout
                            </button>
                        </form>
                    </li>
                <% } else { %>
                    <li><a href="/login">Login</a></li>
                    <li><a href="/register">Register</a></li>
                    <li><a href="/faq"><i class="fas fa-question-circle"></i> FAQ</a></li>
                <% } %>
            </ul>
        </nav>
    </header>
    
    <main id="main-content">
    <script>
        function toggleMessages() {
            const dropdown = document.getElementById('messages-dropdown');
            dropdown.style.display = dropdown.style.display === 'block' ? 'none' : 'block';
            
            // If opened, refresh messages
            if (dropdown.style.display === 'block') {
                checkMessages();
            }
        }
        
        // Mark a specific message as read
        async function markMessageAsRead(messageId, ticketId) {
            try {
                await fetch(`/messages/read/${messageId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
                // Navigate to the ticket view
                window.location.href = `/tickets/view/${ticketId}`;
            } catch (error) {
                console.error('Error marking message as read:', error);
            }
        }
        
        // Mark all messages as read
        async function markAllMessagesAsRead() {
            try {
                await fetch('/messages/read-all', {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
                // Update UI
                document.getElementById('notification-count').textContent = '0';
                document.getElementById('messages-container').innerHTML = 
                    '<div class="empty-messages">No new notifications</div>';
            } catch (error) {
                console.error('Error marking all messages as read:', error);
            }
        }
        
        // Check for new messages
        async function checkMessages() {
            if (document.getElementById('notification-count')) {
                try {
                    const response = await fetch('/messages/unread');
                    if (response.ok) {
                        const data = await response.json();
                        document.getElementById('notification-count').textContent = data.count;
                        
                        const container = document.getElementById('messages-container');
                        
                        if (data.count === 0) {
                            container.innerHTML = '<div class="empty-messages">No new notifications</div>';
                            return;
                        }
                        
                        if (data.messages && data.messages.length > 0) {
                            container.innerHTML = '';
                            
                            data.messages.forEach(msg => {
                                const date = new Date(msg.date).toLocaleString();
                                container.innerHTML += `
                                <div class="message-item">
                                    <div class="message-content">${msg.text}</div>
                                    <span class="message-time">${date}</span>
                                    <div class="message-actions">
                                        <a href="javascript:void(0)" 
                                           onclick="markMessageAsRead('${msg.id}', '${msg.ticketId}')" 
                                           class="btn-view-message">
                                            <i class="fas fa-eye"></i> View Ticket
                                        </a>
                                    </div>
                                </div>`;
                            });
                        }
                    }
                } catch (error) {
                    console.error('Error checking messages:', error);
                }
            }
        }
        
        // Initial check
        document.addEventListener('DOMContentLoaded', checkMessages);
        
        // Set interval for periodic checks
        setInterval(checkMessages, 30000);
    </script>
</body>
</html>